openapi: 3.0.0
info:
  title: AVAX Advanced API
  description: The AVAX Advanced API provides seamless interaction with the Avalanche blockchain, designed for simplicity, scalability, and security.
  version: 1.0.0
  contact:
    name: AVAX API Support
    url: https://avax-explorer.co
    email: support@avax-explorer.co

servers:
  - url: https://avax-explorer.co/api
    description: Base URL for AVAX Advanced API

paths:
  /create/keypair:
    get:
      summary: Create a new wallet with private and public keys.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  private_key:
                    type: string
                    example: "5JrYt7WkXYiXb3AkZGzjpP7zy8Tt9Kf1cv..."
                  public_key:
                    type: string
                    example: "WkXYiXb3AkZGzjpP7zy8Tt9Kf1cv..."

  /create/account/by_mnemonic:
    post:
      summary: Create a new account using a mnemonic phrase.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mnemonic:
                  type: string
                  example: "apple banana orange grape ..."
                account_name:
                  type: string
                  example: "MyAVAXAccount"
      responses:
        '200':
          description: Account creation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_address:
                    type: string
                    example: "X-avax1..."
                  public_key:
                    type: string
                    example: "PublicKey..."
                  private_key:
                    type: string
                    example: "5JrYt7WkXYiXb3AkZGzjpP7zy8Tt9Kf1cv...."

  /transfer/avax:
    post:
      summary: Transfer AVAX tokens between wallets.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                private_key:
                  type: string
                  example: "5JrYt7WkXYiXb3AkZGzjpP7zy8Tt9Kf1cv..."
                recipient_address:
                  type: string
                  example: "X-avax1..."
                amount:
                  type: number
                  example: 10.5
      responses:
        '200':
          description: Transaction submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  transaction_id:
                    type: string
                    example: "2G5s1..."
                  blockchain:
                    type: string
                    example: "Avalanche"

  /transactions:
    post:
      summary: Submit a transaction to the network.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                private_key:
                  type: string
                  example: "5JrYt7WkXYiXb3AkZGzjpP7zy8Tt9Kf1cv..."
                transaction_data:
                  type: object
                  properties:
                    amount:
                      type: number
                      example: 10.5
                    recipient:
                      type: string
                      example: "X-avax1..."
      responses:
        '200':
          description: Transaction submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  transaction_id:
                    type: string
                    example: "2G5s1..."

  /blocks/{block_id}:
    get:
      summary: Retrieve information about a specific block.
      parameters:
        - name: block_id
          in: path
          required: true
          schema:
            type: integer
            example: 1000001
      responses:
        '200':
          description: Block details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_id:
                    type: integer
                    example: 1000001
                  block_data:
                    type: string
                    example: "Block data"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-11-26T12:00:00Z"

  /blockchain/ledger:
    get:
      summary: Retrieve the latest ledger data.
      responses:
        '200':
          description: Latest ledger data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  latest_block:
                    type: integer
                    example: 1000001
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-11-26T12:00:00Z"

  /network/info:
    get:
      summary: Retrieve information about the AVAX network status and health.
      responses:
        '200':
          description: Network status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  network_status:
                    type: string
                    example: "healthy"
                  peer_count:
                    type: integer
                    example: 25
                  uptime:
                    type: string
                    example: "99.9%"

  # New Endpoints

  /account/{address}/balance:
    get:
      summary: Retrieve the balance of a specific AVAX account.
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
            example: "X-avax1..."
      responses:
        '200':
          description: Account balance retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    example: 100.5
                  address:
                    type: string
                    example: "X-avax1..."

  /transaction/{transaction_id}:
    get:
      summary: Retrieve the status of a specific transaction.
      parameters:
        - name: transaction_id
          in: path
          required: true
          schema:
            type: string
            example: "2G5s1..."
      responses:
        '200':
          description: Transaction status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction_id:
                    type: string
                    example: "2G5s1..."
                  status:
                    type: string
                    example: "success"
                  block_id:
                    type: integer
                    example: 1000001
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-11-26T12:00:00Z"

  /network/peers:
    get:
      summary: Retrieve a list of active peers connected to the AVAX network.
      responses:
        '200':
          description: List of network peers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  peer_count:
                    type: integer
                    example: 25
                  peers:
                    type: array
                    items:
                      type: object
                      properties:
                        peer_id:
                          type: string
                          example: "peer_id_example"
                        peer_address:
                          type: string
                          example: "192.168.1.1"
                        connection_status:
                          type: string
                          example: "connected"

components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string

